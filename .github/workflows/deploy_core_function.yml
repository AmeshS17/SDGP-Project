# This is a basic workflow to help you get started with Actions

name: Deploy model and dependant functions to AWS Lambda

# Controls when the action will run. 
on:
  # Triggers the workflow on push but only for the main branch
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy_model:
    name: Deploy model
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Zips generate_summary.py
      - name: Zip generate_summary function
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq ./generate_summary.zip ./Backend/Lambda_Functions/generate_summary/generate_summary.py
          
      # Deploys the script to AWS Lambda
      - name: Deploy generate_summary code to lambda function generate_summary
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-west-2
          function_name: generate_summary
          zip_file: generate_summary.zip
          
  deploy_preprocessor:
    name: Deploy text preprocessor
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Zips preprocess_text.py
      - name: Zip preprocess_text function
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq ./preprocess_text.zip ./Backend/Lambda_Functions/preprocess_text/preprocess_text.py
          
      # Deploys the script to AWS Lambda
      - name: Deploy preprocess_text function to lambda function preprocess_text
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-west-2
          function_name: preprocess_text
          zip_file: preprocess_text.zip
  
  deploy_retriever:
    name: Deploy results retriever
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Zips preprocess_text.py
      - name: Zip retrieve_summary function
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq ./retrieve_summary.zip ./Backend/Lambda_Functions/retrieve_summary/retrieve_summary.py
          
      # Deploys the script to AWS Lambda
      - name: Deploy retrieve_summary function to lambda function retrieve_summary
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-west-2
          function_name: retrieve_summary
          zip_file: retrieve_summary.zip
        
  deploy_url_generator:
    name: Deploy url generator
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Zips preprocess_text.py
      - name: Zip generate_s3_upload_url function
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq ./generate_s3_upload_url.zip ./Backend/Lambda_Functions/generate_s3_upload_url/generate_s3_upload_url.py
          
      # Deploys the script to AWS Lambda
      - name: Deploy generate_s3_upload_url function to lambda function generate_s3_upload_url
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-west-2
          function_name: generate_s3_upload_url
          zip_file: generate_s3_upload_url.zip
          
  deploy_async_model_trigger:
    name: Deploy async model trigger
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Zips preprocess_text.py
      - name: Zip async_invoke_model function
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq ./async_invoke_model.zip ./Backend/Lambda_Functions/async_invoke_model/async_invoke_model.py
          
      # Deploys the script to AWS Lambda
      - name: Deploy async_invoke_model function to lambda function async_invoke_model
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-west-2
          function_name: async_invoke_model
          zip_file: async_invoke_model.zip

  deploy_game_listing:
    name: Deploy game listing service
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Zips get_games.py
      - name: Zip get_games function
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq ./get_games.zip ./Backend/Lambda_Functions/get_games/get_games.py
          
      # Deploys the script to AWS Lambda
      - name: Deploy get_games function to lambda function get_games
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-west-2
          function_name: get_games
          zip_file: get_games.zip


